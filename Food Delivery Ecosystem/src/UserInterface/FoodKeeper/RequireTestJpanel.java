/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FoodKeeper;

import Business.Enterprise.Enterprise;
import static Business.Enterprise.Enterprise.EnterpriseType.FoodStorage;
import Business.Enterprise.FoodStorageEnterprise;
import Business.Food.Food;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Workqueue.InspectorWorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author linhchen
 */
public class RequireTestJpanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount useraccount;
    Network city;
    /**
     * Creates new form RequireTestJpanel
     */
    public RequireTestJpanel(JPanel userProcessContainer,Enterprise enterprise,UserAccount useraccount,Network city) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.useraccount=useraccount;
        this.enterprise=enterprise;
        this.city=city;
        popTbl();
        popCbx();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        RequireTestTbl = new javax.swing.JTable();
        btnRequireTest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        ChooseInspectorCbx = new javax.swing.JComboBox();
        btnBack = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        RequireTestTbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        RequireTestTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "FoodId", "FoodName", "Quantity", "Test Status"
            }
        ));
        jScrollPane1.setViewportView(RequireTestTbl);

        btnRequireTest.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnRequireTest.setText("Require Test>>");
        btnRequireTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRequireTestActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("Please choose an Inspector :");

        ChooseInspectorCbx.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        ChooseInspectorCbx.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnBack.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnBack.setText("<<Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnBack)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnRequireTest))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(28, 28, 28)
                                .addComponent(ChooseInspectorCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 5, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(ChooseInspectorCbx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRequireTest)
                    .addComponent(btnBack))
                .addGap(23, 23, 23))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    private void btnRequireTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRequireTestActionPerformed
        int r=RequireTestTbl.getSelectedRow();
        if(r>=0) {
            Food f=(Food)RequireTestTbl.getValueAt(r, 1);
            InspectorWorkRequest iwq=new InspectorWorkRequest();
            UserAccount ua=(UserAccount)ChooseInspectorCbx.getSelectedItem();
            iwq.setFood(f);
            iwq.setReceiver(ua);
            ((FoodStorageEnterprise)this.enterprise).getWorkqueue().getWorkRequestList().add(iwq);
            JOptionPane.showMessageDialog(null, "The test request has been sent to "+ (UserAccount)ChooseInspectorCbx.getSelectedItem()+" !");
            }else{
                JOptionPane.showMessageDialog(null, "Please Select one row!");
            }
    }//GEN-LAST:event_btnRequireTestActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);        // TODO add your handling code here:
    }//GEN-LAST:event_btnBackActionPerformed
    private void popCbx(){
        ChooseInspectorCbx.removeAllItems();
        for(Organization o:this.enterprise.getOrganizationDirectory().getOrganizationList()){
             for(UserAccount ua:o.getUserAccountDirectory().getUserAccountList()){
                 ChooseInspectorCbx.addItem(ua);
                 
             }
        }
    }
    private void popTbl(){
        DefaultTableModel dtm=(DefaultTableModel)RequireTestTbl.getModel();
        dtm.setRowCount(0);
        for(Food f:((FoodStorageEnterprise)this.enterprise).getFoodlist().getFoodlist()){
                Object[] row=new Object[4];
                row[0]=f.getFoodId();
                row[1]=f;
                row[2]=f.getQuantity();
                dtm.addRow(row);
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ChooseInspectorCbx;
    private javax.swing.JTable RequireTestTbl;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnRequireTest;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
