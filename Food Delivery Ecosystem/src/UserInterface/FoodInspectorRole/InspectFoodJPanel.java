/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserInterface.FoodInspectorRole;

import Business.Business;
import Business.Enterprise.Enterprise;
import Business.Enterprise.FoodStorageEnterprise;
import Business.Food.Food;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.Workqueue.InspectorWorkRequest;
import Business.Workqueue.WorkRequest;
import java.awt.CardLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;

/**
 *
 * @author Astha Sharma
 */
public class InspectFoodJPanel extends javax.swing.JPanel {
    JPanel userProcessContainer;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    Network city;
    Business business;
    /**
     * Creates new form InspectFoodJPanel
     */
    public InspectFoodJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise,Network city,Business business) {
        initComponents();
        this.userProcessContainer=userProcessContainer;
        this.account=account;
        this.city=city;
        this.enterprise=enterprise;
        this.organization=organization;
        this.city=city;
        this.business=business;
        popTbl();
    }
    private void popTbl(){
        DefaultTableModel dtm=(DefaultTableModel)InspectorTbl.getModel();
        dtm.setRowCount(0);
        for(WorkRequest iwq:((FoodStorageEnterprise)this.enterprise).getWorkqueue().getWorkRequestList()){
            Object[] row=new Object[4];
            row[0]=iwq.getFood().getFoodId();
            row[1]=iwq.getFood();
            row[2]=iwq.getFood().getQuantity();
            row[3]=iwq.getStatus();
            dtm.addRow(row);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        InspectorTbl = new javax.swing.JTable();
        btnAnalyse = new javax.swing.JButton();
        btnWriteReport = new javax.swing.JButton();
        btnQuantityAnalyse = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 153, 153));

        InspectorTbl.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        InspectorTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "FoodId", "FoodName", "Quantity", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(InspectorTbl);
        if (InspectorTbl.getColumnModel().getColumnCount() > 0) {
            InspectorTbl.getColumnModel().getColumn(0).setResizable(false);
            InspectorTbl.getColumnModel().getColumn(1).setResizable(false);
            InspectorTbl.getColumnModel().getColumn(2).setResizable(false);
            InspectorTbl.getColumnModel().getColumn(3).setResizable(false);
        }

        btnAnalyse.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnAnalyse.setText("Analyse>>");
        btnAnalyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnalyseActionPerformed(evt);
            }
        });

        btnWriteReport.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnWriteReport.setText("Write Report>>");
        btnWriteReport.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnWriteReportActionPerformed(evt);
            }
        });

        btnQuantityAnalyse.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        btnQuantityAnalyse.setText("Analyse Quantity >>");
        btnQuantityAnalyse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuantityAnalyseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAnalyse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnQuantityAnalyse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnWriteReport, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(btnQuantityAnalyse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAnalyse)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnWriteReport)
                .addContainerGap(18, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAnalyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnalyseActionPerformed
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnAnalyseActionPerformed

    private void btnWriteReportActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnWriteReportActionPerformed
        int r = InspectorTbl.getSelectedRow();
        if(r>=0){
            Food f=(Food)InspectorTbl.getValueAt(r, 1);
            WriteFoodJPanel wfjp=new WriteFoodJPanel(userProcessContainer,account,enterprise,f);
            userProcessContainer.add("",wfjp);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
            }
        else{
                JOptionPane.showMessageDialog(null, "Please Select one row!");
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_btnWriteReportActionPerformed

    private void btnQuantityAnalyseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuantityAnalyseActionPerformed
        // TODO add your handling code here:
       try
        {
            DefaultCategoryDataset dataset = new DefaultCategoryDataset();
            int quant=InspectorTbl.getSelectedColumn(); // get the quantity value here from the table Then add the next dataset function in a loop.
            
            double protein=0,hydra=0,fat=0;
            
            for(Food f:((FoodStorageEnterprise)this.enterprise).getFoodlist().getFoodlist()){
                protein += f.getProteinPerCentage()*f.getQuantity()/100;
                hydra += (f.getCarbonHydratePerCentage())*(f.getQuantity())/100;
                fat += f.getFatPerCentage()*f.getQuantity()/100;
            }
            dataset.setValue(hydra,"", "CarbonHydrate");
            dataset.setValue(protein,"", "Protein");
            dataset.setValue(fat,"", "Fat");
            JFreeChart chart = ChartFactory.createBarChart("Food Nutrition Analysis", "Components","Summary", dataset,PlotOrientation.VERTICAL,false,false,false);
            
            
            CategoryPlot pa = chart.getCategoryPlot();
            pa.setRangeGridlinePaint(Color.black);
            ChartFrame frame = new ChartFrame("Food Quantity Analysis", chart);
            frame.setVisible(true);
            frame.setSize(450, 350);

        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "This service is currently unavailable. Please try later!");
        }
    }//GEN-LAST:event_btnQuantityAnalyseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable InspectorTbl;
    private javax.swing.JButton btnAnalyse;
    private javax.swing.JButton btnQuantityAnalyse;
    private javax.swing.JButton btnWriteReport;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
